import numpy as np
import matplotlib.pyplot as plt

"""
Function to quickly add the title & axis labels to a plot
"""
def gTitleXY(Title,labelX,labelY):
    plt.title(Title) 
    plt.xlabel(labelX) 
    plt.ylabel(labelY) 

# Trial1 has a delay of 0
trial1 = np.zeros((4, 31))
trial1[0] = [513, 3588, 3555, 3686, 3481, 3582, 2562, 2559, 2661, 3498, 2542, 2558, 2558, 2559, 2503, 3645, 2553, 2924, 2603, 2560, 2661, 2560, 2454, 2665, 2464, 2552, 2556, 2676, 3878, 2662, 84]
trial1[1] = [492, 3633, 3381, 3581, 2765, 3480, 3993, 2963, 2771, 3686, 3585, 2560, 3081, 2989, 2535, 2862, 2792, 2532, 2763, 3380, 2565, 2556, 2555, 2663, 2568, 2450, 2557, 2561, 2558, 2560, 85]
trial1[2] = [331, 3603, 2561, 10229, 2571, 3583, 3691, 3476, 2663, 2872, 2658, 3685, 3584, 3584, 3581, 3480, 3483, 3786, 3379, 2660, 3686, 3583, 3481, 2559, 2567, 2669, 3569, 3481, 2559, 2560, 100]
trial1[3] = [5998, 9821, 2669, 2766, 3377, 2662, 2662, 3583, 3479, 2561, 2457, 2761, 3887, 3895, 3598, 3567, 3384, 3802, 3260, 2661, 3881, 2876, 3480, 2662, 3889, 3691, 3581, 9933, 3654, 2795, 114]

# Trial2 has a delay of 0.125
trial2 = np.zeros((4, 31))
trial2[0] = [6642, 3658, 3171, 2971, 2914, 3740, 2870, 3594, 3574, 3685, 3787, 2973, 2867, 3581, 3588, 3980, 3699, 3683, 3687, 2970, 3584, 3482, 3762, 3030, 3563, 3673, 3075, 2864, 3583, 3460, 105]
trial2[1] = [445, 3049, 2856, 9832, 3890, 3991, 2767, 3685, 3582, 3486, 3583, 3580, 3586, 3687, 3582, 3585, 3877, 326, 2966, 3788, 2799, 3652, 3688, 2868, 3587, 440, 3649, 3588, 3785, 2949, 102]
trial2[2] = [416, 2934, 3685, 3586, 3481, 3687, 3480, 3584, 3884, 2979, 2976, 3172, 3071, 2862, 3983, 2725, 3635, 3377, 3687, 9726, 3484, 9727, 9830, 3585, 3589, 3477, 2662, 3687, 3482, 3458, 118]
trial2[3] = [442, 2736, 3686, 9832, 3583, 19353, 3685, 8911, 2865, 3588, 3581, 3584, 3583, 3587, 3582, 3584, 3686, 8090, 3584, 3584, 3584, 3585, 3584, 3587, 3587, 3577, 3588, 3579, 3584, 3458, 134]

# Trial3 has a delay of 0.25
trial3 = np.zeros((4, 31))
trial3[0] = [621, 2917, 3584, 3892, 411, 421, 3058, 406, 3584, 480, 415, 4019, 414, 2861, 602, 3084, 410, 3596, 418, 429, 3745, 418, 3782, 430, 3569, 443, 22076, 409, 423, 10684, 82]
trial3[1] = [623, 3593, 433, 3723, 411, 3683, 417, 3678, 449, 3645, 408, 3685, 417, 3679, 407, 3690, 447, 9790, 453, 9684, 513, 3684, 519, 415, 3883, 443, 2928, 3071, 526, 159, 70]
trial3[2] = [722, 3030, 410, 3803, 440, 415, 3492, 407, 3322, 422, 440, 12329, 523, 407, 3787, 3174, 408, 441, 3654, 407, 3693, 497, 410, 9530, 3604, 413, 3047, 422, 3265, 160, 67]
trial3[3] = [924, 3348, 424, 443, 596, 2738, 415, 2762, 407, 3582, 3689, 3073, 451, 3527, 452, 3850, 409, 2977, 422, 3975, 417, 2867, 3788, 455, 2930, 440, 3750, 447, 3033, 166, 57]


# Trial4 has a delay of 0.375
trial4 = np.zeros((4, 31))
trial4[0] = [614, 3247, 4201, 546, 535, 537, 541, 533, 533, 3837, 533, 4177, 544, 533, 534, 541, 537, 542, 3731, 3473, 533, 542, 532, 533, 539, 533, 10213, 583, 545, 160, 45]
trial4[1] = [703, 538, 533, 559, 3248, 539, 549, 552, 539, 552, 576, 537, 544, 546, 538, 575, 531, 3143, 546, 538, 552, 546, 532, 4045, 547, 532, 537, 537, 544, 158, 25]
trial4[2] = [646, 532, 531, 542, 575, 537, 4141, 532, 535, 541, 539, 555, 563, 534, 537, 542, 569, 543, 543, 587, 552, 545, 533, 533, 541, 4467, 535, 536, 543, 164, 24]
trial4[3] = [675, 643, 537, 545, 534, 540, 542, 535, 2951, 543, 614, 547, 543, 537, 2948, 650, 553, 536, 540, 532, 532, 3724, 536, 536, 544, 532, 544, 534, 3944, 160, 27]

# Trial5 has a delay of 0.5
trial5 = np.zeros((4, 31))
trial5[0] = [762, 808, 719, 728, 704, 719, 826, 717, 720, 722, 998, 725, 721, 711, 811, 729, 708, 715, 673, 761, 664, 674, 709, 820, 670, 761, 659, 668, 925, 218, 22]
trial5[1] = [757, 667, 759, 723, 706, 720, 724, 709, 657, 679, 707, 662, 678, 670, 659, 671, 758, 713, 722, 714, 666, 967, 715, 716, 721, 712, 659, 664, 730, 208, 21]
trial5[2] = [974, 4273, 744, 668, 675, 703, 861, 777, 813, 2055, 669, 760, 826, 707, 723, 715, 662, 768, 818, 713, 814, 731, 657, 963, 929, 713, 724, 807, 735, 161, 27]
trial5[3] = [853, 1013, 722, 725, 705, 3965, 758, 704, 813, 732, 805, 720, 721, 715, 713, 819, 716, 718, 721, 708, 10314, 754, 707, 813, 730, 814, 4306, 812, 669, 264, 38]


# Trial6 has a delay of 0.625
trial6 = np.zeros((4, 31))
trial6[0] = [959, 815, 818, 827, 810, 822, 823, 1010, 829, 922, 912, 825, 826, 808, 824, 828, 809, 825, 821, 811, 915, 936, 809, 819, 925, 1016, 826, 818, 830, 281, 25]
trial6[1] = [1071, 1124, 4379, 959, 1113, 1127, 830, 1115, 824, 930, 815, 1117, 830, 815, 915, 832, 811, 917, 928, 783, 854, 828, 908, 826, 827, 786, 845, 819, 826, 288, 30]
trial6[2] = [941, 918, 827, 925, 809, 831, 908, 1017, 782, 871, 4772, 851, 825, 918, 814, 828, 916, 819, 827, 916, 913, 789, 854, 821, 827, 914, 817, 925, 827, 183, 29]
trial6[3] = [960, 820, 909, 1236, 782, 859, 876, 1059, 829, 1023, 816, 916, 834, 907, 825, 922, 915, 797, 950, 916, 921, 833, 810, 916, 829, 817, 821, 919, 823, 188, 26]

# Trial7 has a delay of 0.75
trial7 = np.zeros((4, 31))
trial7[0] = [1467, 1211, 1432, 953, 1099, 1024, 930, 1111, 1226, 1033, 1220, 1023, 1159, 997, 1023, 950, 994, 1021, 929, 1112, 1085, 973, 1021, 1117, 1030, 1323, 929, 1246, 1012, 267, 32]
trial7[1] = [1047, 1026, 1116, 1036, 1017, 1023, 1225, 920, 924, 1027, 1018, 1043, 1014, 1016, 1019, 1030, 1019, 1026, 1029, 1011, 927, 1026, 1016, 1220, 931, 1115, 946, 1005, 1030, 266, 30]
trial7[2] = [1218, 921, 921, 1365, 1187, 1027, 1029, 1020, 919, 933, 1013, 1044, 1108, 1037, 1104, 978, 975, 1023, 1227, 923, 1024, 1029, 1117, 924, 1226, 4371, 950, 1223, 1002, 3854, 38]
trial7[3] = [3866, 989, 999, 933, 1015, 1041, 1013, 1014, 921, 1332, 1032, 1015, 1028, 1118, 922, 942, 999, 925, 1031, 1015, 1040, 1108, 921, 938, 1014, 1023, 1213, 929, 1228, 267, 33]


# Trial8 has a delay of 0.875
trial8 = np.zeros((4, 31))
trial8[0] = [1212, 1227, 1229, 4472, 1053, 1134, 1125, 1221, 1128, 1162, 1188, 1134, 1163, 1189, 1223, 1137, 1129, 1220, 1333, 1734, 1228, 1140, 1139, 1305, 1147, 1117, 1124, 1144, 1114, 244, 38]
trial8[1] = [1207, 1098, 1127, 1234, 1223, 1126, 1134, 1222, 1125, 1435, 1220, 1234, 1140, 1115, 1126, 1135, 1213, 1134, 1134, 1213, 1137, 1226, 1143, 1112, 1126, 1219, 1132, 1126, 1134, 241, 34]
trial8[2] = [1109, 1323, 1329, 1162, 1101, 1123, 1135, 1212, 1136, 1227, 1125, 1165, 1099, 1118, 1131, 1124, 1121, 1129, 1329, 1222, 1433, 1140, 1243, 1109, 1132, 1119, 1227, 1140, 1217, 252, 34]
trial8[3] = [1092, 1121, 1222, 1162, 1101, 1219, 1137, 1224, 1425, 1147, 1114, 1123, 1134, 1123, 1130, 1130, 1165, 4634, 1105, 1076, 1126, 1133, 1122, 1121, 1232, 1232, 1122, 1128, 1229, 250, 38]


# Trial9 has a delay of 1
trial9 = np.zeros((4, 31))
trial9[0] = [1269, 1307, 1332, 1239, 1520, 1237, 1327, 1343, 1219, 1233, 1224, 1321, 1244, 1220, 1326, 1238, 1326, 1227, 1338, 1217, 1262, 1306, 2652, 1232, 1333, 1318, 1238, 1228, 1235, 217, 39]
trial9[1] = [1507, 1333, 1531, 1341, 1327, 1227, 1337, 1220, 1231, 1335, 1226, 1226, 1231, 1223, 1330, 1537, 1230, 1327, 1339, 2551, 1229, 1236, 1220, 1324, 1338, 1329, 1325, 1234, 1232, 221, 39]
trial9[2] = [1357, 1324, 1335, 1635, 1227, 1234, 1324, 1225, 1332, 1245, 1213, 1225, 1345, 1324, 1321, 1240, 1219, 1230, 1235, 1224, 1225, 1238, 1519, 1238, 1233, 1322, 1228, 1230, 1240, 216, 38]
trial9[3] = [1253, 1326, 1527, 1542, 1334, 1527, 1241, 1219, 1334, 1235, 1318, 1234, 1239, 1314, 1434, 1241, 1227, 1224, 1328, 1324, 1236, 1233, 1317, 1237, 1234, 1322, 1334, 1227, 1535, 251, 39]

# Function to generate standard deviation and mean of transmission times.
def analyseTrial(trialChoice,index):

    periods = [0,0.125,0.25,0.375,0.5,0.625,0.75,0.875,1]

    trialSingles = np.zeros((4, 30))
    for n,trial in enumerate(trialChoice):
        trialSingles[n] = trial[:30]

    trialTotals = np.zeros(4)
    for n,trial in enumerate(trialChoice):
        trialTotals[n] = trial[30]

    wholeMean = int(np.mean(trialTotals))
    wholeSD = int(np.std(trialTotals))
    singleSD = int(np.std(trialSingles))
    singleMean = int(np.mean(trialSingles))

    return singleSD,singleMean,wholeSD,wholeMean

T1sSD,T1sM,T1tSD,T1tM = analyseTrial(trial1,1)
T2sSD,T2sM,T2tSD,T2tM = analyseTrial(trial2,2)
T3sSD,T3sM,T3tSD,T3tM = analyseTrial(trial3,3)
T4sSD,T4sM,T4tSD,T4tM = analyseTrial(trial4,4)
T5sSD,T5sM,T5tSD,T5tM = analyseTrial(trial5,5)
T6sSD,T6sM,T6tSD,T6tM = analyseTrial(trial6,6)
T7sSD,T7sM,T7tSD,T7tM = analyseTrial(trial7,7)
T8sSD,T8sM,T8tSD,T8tM = analyseTrial(trial8,8)
T9sSD,T9sM,T9tSD,T9tM = analyseTrial(trial9,9)

xAxis = [0,0.125,0.25,0.375,0.5,0.625,0.75,0.875,1]

plt.subplot(2, 2, 2)
yAxis = [T1sSD,T2sSD,T3sSD,T4sSD,T5sSD,T6sSD,T7sSD,T8sSD,T9sSD]
plt.bar(xAxis,yAxis,0.1)
gTitleXY("Standard deviation of single file transmission time",'Delay period (s)','Transmission time S.D. (ms)') 

plt.subplot(2, 2, 1)
yAxis = [T1sM,T2sM,T3sM,T4sM,T5sM,T6sM,T7sM,T8sM,T9sM]
plt.bar(xAxis,yAxis,0.1)
gTitleXY("Mean time of single file transmission",'Delay period (s)','transmission time (ms)')

plt.subplot(2, 2, 4)
yAxis = [T1tSD,T2tSD,T3tSD,T4tSD,T5tSD,T6tSD,T7tSD,T8tSD,T9tSD]
plt.bar(xAxis,yAxis,0.1)
gTitleXY("Standard deviation of entire transmission",'Delay period (s)','Transmission time S.D. (s)')

plt.subplot(2, 2, 3)
yAxis = [T1tM,T2tM,T3tM,T4tM,T5tM,T6tM,T7tM,T8tM,T9tM]
plt.bar(xAxis,yAxis,0.1)
gTitleXY("Mean time of entire transmission",'Delay period (s)','transmission time (s)')

plt.suptitle("Plots of transmission time based on file switchover delay, and respective standard deviations.")

plt.show()
